import React, { useState, useEffect } from 'react';
import { 
  Layout, 
  Button, 
  Row, 
  Col, 
  Card, 
  Typography, 
  Space, 
  Avatar, 
  Statistic, 
  Timeline,
  Tabs,
  Badge,
  Divider,
  Form,
  Input,
  Modal
} from 'antd';
import {
  PlayCircleOutlined,
  UserOutlined,
  SettingOutlined,
  TrophyOutlined,
  TeamOutlined,
  BarChartOutlined,
  CheckCircleOutlined,
  RocketOutlined,
  SafetyOutlined,
  ThunderboltOutlined,
  StarOutlined,
  ArrowRightOutlined,
  QuestionCircleOutlined,
  EditOutlined,
  EyeOutlined,
  MailOutlined,
  PhoneOutlined
} from '@ant-design/icons';

const { Header, Content, Footer } = Layout;
const { Title, Paragraph, Text } = Typography;
const { TabPane } = Tabs;

const Emty = () => {
  const [activeTab, setActiveTab] = useState('admin');
  const [showDemo, setShowDemo] = useState(false);
  const [animatedStats, setAnimatedStats] = useState({
    users: 0,
    quizzes: 0,
    questions: 0,
    completed: 0
  });

  // Animation cho statistics
  useEffect(() => {
    const timer = setTimeout(() => {
      setAnimatedStats({
        users: 15420,
        quizzes: 2340,
        questions: 45680,
        completed: 128950
      });
    }, 500);
    return () => clearTimeout(timer);
  }, []);

  const features = [
    {
      icon: <SettingOutlined className="text-4xl text-blue-500" />,
      title: "Qu·∫£n l√Ω Admin M·∫°nh m·∫Ω",
      description: "T·∫°o v√† qu·∫£n l√Ω c√¢u h·ªèi d·ªÖ d√†ng, ph√¢n quy·ªÅn ng∆∞·ªùi d√πng linh ho·∫°t v·ªõi giao di·ªán tr·ª±c quan"
    },
    {
      icon: <UserOutlined className="text-4xl text-green-500" />,
      title: "Tr·∫£i nghi·ªám User Tuy·ªát v·ªùi",
      description: "Giao di·ªán th√¢n thi·ªán, l√†m quiz m∆∞·ª£t m√† v·ªõi nhi·ªÅu ƒë·ªãnh d·∫°ng c√¢u h·ªèi ƒëa d·∫°ng"
    },
    {
      icon: <BarChartOutlined className="text-4xl text-purple-500" />,
      title: "Th·ªëng k√™ Chi ti·∫øt",
      description: "B√°o c√°o real-time, ph√¢n t√≠ch k·∫øt qu·∫£ chi ti·∫øt gi√∫p theo d√µi ti·∫øn ƒë·ªô h·ªçc t·∫≠p"
    },
    {
      icon: <SafetyOutlined className="text-4xl text-red-500" />,
      title: "B·∫£o m·∫≠t Cao",
      description: "H·ªá th·ªëng b·∫£o m·∫≠t ƒëa l·ªõp, m√£ h√≥a d·ªØ li·ªáu ƒë·∫£m b·∫£o th√¥ng tin lu√¥n an to√†n"
    },
    {
      icon: <ThunderboltOutlined className="text-4xl text-yellow-500" />,
      title: "Hi·ªáu su·∫•t Cao",
      description: "T·ªëi ∆∞u h√≥a t·ªëc ƒë·ªô, x·ª≠ l√Ω h√†ng ngh√¨n user ƒë·ªìng th·ªùi kh√¥ng lag"
    },
    {
      icon: <TeamOutlined className="text-4xl text-indigo-500" />,
      title: "H·ªó tr·ª£ ƒêa ng∆∞·ªùi d√πng",
      description: "H·ªó tr·ª£ nhi·ªÅu t·ªï ch·ª©c, ph√≤ng ban v·ªõi system ph√¢n quy·ªÅn linh ho·∫°t"
    }
  ];

  const pricingPlans = [
    {
      name: "Starter",
      price: "Free",
      description: "Ho√†n h·∫£o cho c√° nh√¢n",
      features: [
        "T·ªëi ƒëa 50 c√¢u h·ªèi",
        "5 quiz c√πng l√∫c",
        "B√°o c√°o c∆° b·∫£n",
        "H·ªó tr·ª£ email"
      ],
      popular: false,
      buttonText: "D√πng th·ª≠ mi·ªÖn ph√≠"
    },
    {
      name: "Professional",
      price: "299,000ƒë/th√°ng",
      description: "D√†nh cho team nh·ªè",
      features: [
        "Kh√¥ng gi·ªõi h·∫°n c√¢u h·ªèi",
        "Kh√¥ng gi·ªõi h·∫°n quiz",
        "B√°o c√°o chi ti·∫øt",
        "H·ªó tr·ª£ 24/7",
        "API t√≠ch h·ª£p",
        "Custom branding"
      ],
      popular: true,
      buttonText: "B·∫Øt ƒë·∫ßu ngay"
    },
    {
      name: "Enterprise",
      price: "Li√™n h·ªá",
      description: "Cho doanh nghi·ªáp l·ªõn",
      features: [
        "T·∫•t c·∫£ t√≠nh nƒÉng Pro",
        "M√°y ch·ªß ri√™ng",
        "SSO & LDAP",
        "H·ªó tr·ª£ tri·ªÉn khai",
        "Training & t∆∞ v·∫•n",
        "SLA 99.9%"
      ],
      popular: false,
      buttonText: "Li√™n h·ªá t∆∞ v·∫•n"
    }
  ];

  return (
    <Layout className="min-h-screen">
      {/* Header */}
      <Header className="bg-white shadow-sm px-8 flex items-center justify-between sticky top-0 z-50">
        <div className="flex items-center space-x-3">
          <div className="w-10 h-10 bg-gradient-to-r from-blue-500 to-purple-600 rounded-lg flex items-center justify-center">
            <span className="text-white text-xl">ü¶Ü</span>
          </div>
          <Title level={3} className="m-0 bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
            DuckMen Quiz System
          </Title>
        </div>
        <Space size="large">
          <Button type="text" size="large">T√≠nh nƒÉng</Button>
          <Button type="text" size="large">Gi√° c·∫£</Button>
          <Button type="text" size="large">Li√™n h·ªá</Button>
          <Button 
            type="primary" 
            size="large" 
            className="bg-gradient-to-r from-blue-500 to-purple-600 border-0"
            onClick={() => window.location.href = '/register'}
          >
            ƒêƒÉng k√Ω ngay
          </Button>
        </Space>
      </Header>

      <Content>
        {/* Hero Section */}
        <div className="bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 py-20">
          <div className="max-w-7xl mx-auto px-8">
            <Row gutter={[48, 48]} align="middle">
              <Col xs={24} lg={12}>
                <div className="space-y-8">
                  <div className="space-y-6">
                    <Badge.Ribbon text="üöÄ H·ªá th·ªëng Quiz Th√¥ng minh" color="purple">
                      <Title level={1} className="text-5xl font-bold leading-tight">
                        DuckMen Quiz System
                        <span className="block bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
                          N·ªÅn t·∫£ng Quiz Hi·ªán ƒë·∫°i
                        </span>
                        cho Gi√°o d·ª•c & Doanh nghi·ªáp
                      </Title>
                    </Badge.Ribbon>
                    <Paragraph className="text-xl text-gray-600 leading-relaxed">
                      H·ªá th·ªëng quiz to√†n di·ªán v·ªõi giao di·ªán Admin m·∫°nh m·∫Ω v√† tr·∫£i nghi·ªám User tuy·ªát v·ªùi. 
                      Qu·∫£n l√Ω c√¢u h·ªèi, t·∫°o k·ª≥ thi v√† theo d√µi k·∫øt qu·∫£ m·ªôt c√°ch chuy√™n nghi·ªáp.
                    </Paragraph>
                  </div>
                  
                  <div className="flex flex-wrap gap-4">
                    <Button 
                      type="primary" 
                      size="large" 
                      icon={<RocketOutlined />}
                      className="bg-gradient-to-r from-blue-500 to-purple-600 border-0 h-14 px-8 text-lg font-semibold"
                      onClick={() => window.location.href = '/register'}
                    >
                      ƒêƒÉng k√Ω ngay
                    </Button>
                    <Button 
                      size="large" 
                      icon={<PlayCircleOutlined />}
                      className="h-14 px-8 text-lg font-semibold border-2 border-blue-500 text-blue-600 hover:bg-blue-50"
                      onClick={() => setShowDemo(true)}
                    >
                      Xem Demo
                    </Button>
                  </div>

                  <div className="flex items-center space-x-8 pt-4">
                    <div className="flex -space-x-2">
                      {[1,2,3,4,5].map(i => (
                        <Avatar key={i} size={40} src={`https://i.pravatar.cc/40?img=${i}`} className="border-2 border-white" />
                      ))}
                    </div>
                    <div>
                      <div className="flex items-center space-x-1">
                        {[1,2,3,4,5].map(i => (
                          <StarOutlined key={i} className="text-yellow-400" />
                        ))}
                      </div>
                      <Text className="text-gray-600">ƒê∆∞·ª£c tin d√πng b·ªüi 5,000+ ng∆∞·ªùi d√πng</Text>
                    </div>
                  </div>
                </div>
              </Col>
              
              <Col xs={24} lg={12}>
                <div className="relative">
                  <div className="bg-white rounded-2xl shadow-2xl p-8 transform rotate-3 hover:rotate-0 transition-transform duration-500">
                    <Tabs activeKey={activeTab} onChange={setActiveTab} size="large">
                      <TabPane tab={
                        <span className="flex items-center space-x-2">
                          <SettingOutlined />
                          <span>Admin Panel</span>
                        </span>
                      } key="admin">
                        <div className="space-y-6">
                          <div className="flex items-center justify-between">
                            <Title level={4}>Dashboard Qu·∫£n tr·ªã</Title>
                            <Badge count={5} className="bg-red-500">
                              <Avatar icon={<SettingOutlined />} />
                            </Badge>
                          </div>
                          <Row gutter={16}>
                            <Col span={12}>
                              <Statistic
                                title="C√¢u h·ªèi ƒë√£ t·∫°o"
                                value={animatedStats.questions}
                                prefix={<EditOutlined />}
                                valueStyle={{ color: '#3f8600' }}
                              />
                            </Col>
                            <Col span={12}>
                              <Statistic
                                title="Quiz ho·∫°t ƒë·ªông"
                                value={animatedStats.quizzes}
                                prefix={<QuestionCircleOutlined />}
                                valueStyle={{ color: '#1890ff' }}
                              />
                            </Col>
                          </Row>
                          <Timeline>
                            <Timeline.Item color="green">T·∫°o quiz "Ki·∫øn th·ª©c Marketing" - 2 ph√∫t tr∆∞·ªõc</Timeline.Item>
                            <Timeline.Item color="blue">Ph√™ duy·ªát 15 c√¢u h·ªèi m·ªõi - 5 ph√∫t tr∆∞·ªõc</Timeline.Item>
                            <Timeline.Item>C·∫≠p nh·∫≠t quy·ªÅn user nh√≥m Sales - 10 ph√∫t tr∆∞·ªõc</Timeline.Item>
                          </Timeline>
                        </div>
                      </TabPane>
                      
                      <TabPane tab={
                        <span className="flex items-center space-x-2">
                          <UserOutlined />
                          <span>User Experience</span>
                        </span>
                      } key="user">
                        <div className="space-y-6">
                          <div className="flex items-center justify-between">
                            <Title level={4}>B·∫£ng ƒëi·ªÉm c√° nh√¢n</Title>
                            <Badge count={3} className="bg-blue-500">
                              <Avatar icon={<TrophyOutlined />} />
                            </Badge>
                          </div>
                          <Row gutter={16}>
                            <Col span={12}>
                              <Statistic
                                title="Quiz ƒë√£ ho√†n th√†nh"
                                value={47}
                                prefix={<CheckCircleOutlined />}
                                valueStyle={{ color: '#52c41a' }}
                              />
                            </Col>
                            <Col span={12}>
                              <Statistic
                                title="ƒêi·ªÉm trung b√¨nh"
                                value={8.7}
                                precision={1}
                                prefix={<StarOutlined />}
                                suffix="/ 10"
                                valueStyle={{ color: '#faad14' }}
                              />
                            </Col>
                          </Row>
                          <div className="bg-gradient-to-r from-green-100 to-blue-100 rounded-lg p-4">
                            <div className="flex items-center justify-between">
                              <div>
                                <Text strong>Quiz ti·∫øp theo</Text>
                                <div className="text-gray-600">Ki·∫øn th·ª©c Digital Marketing</div>
                              </div>
                              <Button type="primary" icon={<PlayCircleOutlined />}>
                                B·∫Øt ƒë·∫ßu
                              </Button>
                            </div>
                          </div>
                        </div>
                      </TabPane>
                    </Tabs>
                  </div>
                  
                  {/* Floating elements */}
                  <div className="absolute -top-4 -right-4 w-20 h-20 bg-gradient-to-r from-yellow-400 to-orange-500 rounded-full flex items-center justify-center animate-bounce">
                    <TrophyOutlined className="text-white text-2xl" />
                  </div>
                  
                  <div className="absolute -bottom-4 -left-4 w-16 h-16 bg-gradient-to-r from-green-400 to-blue-500 rounded-full flex items-center justify-center" style={{animation: 'pulse 2s infinite'}}>
                    <CheckCircleOutlined className="text-white text-xl" />
                  </div>
                </div>
              </Col>
            </Row>
          </div>
        </div>

        {/* Stats Section */}
        <div className="py-16 bg-white">
          <div className="max-w-7xl mx-auto px-8">
            <Row gutter={[32, 32]} className="text-center">
              <Col xs={12} md={6}>
                <Statistic
                  title="Ng∆∞·ªùi d√πng ho·∫°t ƒë·ªông"
                  value={animatedStats.users}
                  valueStyle={{ color: '#1890ff', fontSize: '2.5rem', fontWeight: 'bold' }}
                />
              </Col>
              <Col xs={12} md={6}>
                <Statistic
                  title="Quiz ƒë∆∞·ª£c t·∫°o"
                  value={animatedStats.quizzes}
                  valueStyle={{ color: '#52c41a', fontSize: '2.5rem', fontWeight: 'bold' }}
                />
              </Col>
              <Col xs={12} md={6}>
                <Statistic
                  title="C√¢u h·ªèi trong h·ªá th·ªëng"
                  value={animatedStats.questions}
                  valueStyle={{ color: '#faad14', fontSize: '2.5rem', fontWeight: 'bold' }}
                />
              </Col>
              <Col xs={12} md={6}>
                <Statistic
                  title="L∆∞·ª£t ho√†n th√†nh"
                  value={animatedStats.completed}
                  valueStyle={{ color: '#722ed1', fontSize: '2.5rem', fontWeight: 'bold' }}
                />
              </Col>
            </Row>
          </div>
        </div>

        {/* Features Section */}
        <div className="py-20 bg-gradient-to-br from-gray-50 to-blue-50">
          <div className="max-w-7xl mx-auto px-8">
            <div className="text-center mb-16">
              <Title level={2} className="text-4xl font-bold mb-4">
                DuckMen Quiz System <span className="bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">Features</span>
              </Title>
              <Paragraph className="text-xl text-gray-600 max-w-3xl mx-auto">
                H·ªá th·ªëng ƒë∆∞·ª£c thi·∫øt k·∫ø cho c·∫£ Admin v√† User v·ªõi tr·∫£i nghi·ªám t·ªëi ∆∞u v√† t√≠nh nƒÉng m·∫°nh m·∫Ω
              </Paragraph>
            </div>
            
            <Row gutter={[32, 32]}>
              {features.map((feature, index) => (
                <Col xs={24} md={12} lg={8} key={index}>
                  <Card 
                    className="h-full hover:shadow-xl transition-all duration-300 border-0 bg-white/80 backdrop-blur-sm hover:-translate-y-2"
                    bodyStyle={{ padding: '2rem' }}
                  >
                    <div className="text-center space-y-4">
                      <div className="inline-flex items-center justify-center w-16 h-16 bg-gradient-to-r from-blue-100 to-purple-100 rounded-2xl mb-4">
                        {feature.icon}
                      </div>
                      <Title level={4} className="mb-3">{feature.title}</Title>
                      <Paragraph className="text-gray-600 leading-relaxed">
                        {feature.description}
                      </Paragraph>
                    </div>
                  </Card>
                </Col>
              ))}
            </Row>
          </div>
        </div>

        {/* Pricing Section */}
        <div className="py-20 bg-white">
          <div className="max-w-7xl mx-auto px-8">
            <div className="text-center mb-16">
              <Title level={2} className="text-4xl font-bold mb-4">
                B·∫£ng gi√° <span className="bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">Linh ho·∫°t</span>
              </Title>
              <Paragraph className="text-xl text-gray-600">
                Ch·ªçn g√≥i ph√π h·ª£p v·ªõi nhu c·∫ßu c·ªßa b·∫°n
              </Paragraph>
            </div>

            <Row gutter={[32, 32]} justify="center">
              {pricingPlans.map((plan, index) => (
                <Col xs={24} md={8} key={index}>
                  <Card 
                    className={`h-full text-center relative ${plan.popular ? 'border-2 border-blue-500 shadow-xl scale-105' : 'border border-gray-200'} hover:shadow-lg transition-all duration-300`}
                    bodyStyle={{ padding: '2rem' }}
                  >
                    {plan.popular && (
                      <div className="absolute -top-4 left-1/2 transform -translate-x-1/2">
                        <Badge count="Ph·ªï bi·∫øn nh·∫•t" className="bg-blue-500" />
                      </div>
                    )}
                    
                    <div className="space-y-6">
                      <div>
                        <Title level={3} className="mb-2">{plan.name}</Title>
                        <div className="text-3xl font-bold text-blue-600 mb-2">{plan.price}</div>
                        <Text className="text-gray-500">{plan.description}</Text>
                      </div>
                      
                      <Divider />
                      
                      <div className="space-y-3">
                        {plan.features.map((feature, idx) => (
                          <div key={idx} className="flex items-center justify-center space-x-2">
                            <CheckCircleOutlined className="text-green-500" />
                            <Text>{feature}</Text>
                          </div>
                        ))}
                      </div>
                      
                      <Button 
                        type={plan.popular ? "primary" : "default"}
                        size="large"
                        block
                        className={plan.popular ? "bg-gradient-to-r from-blue-500 to-purple-600 border-0 h-12 font-semibold" : "h-12 font-semibold"}
                      >
                        {plan.buttonText}
                      </Button>
                    </div>
                  </Card>
                </Col>
              ))}
            </Row>
          </div>
        </div>

        {/* CTA Section */}
        <div className="py-20 bg-gradient-to-r from-blue-600 to-purple-700">
          <div className="max-w-4xl mx-auto px-8 text-center">
            <Title level={2} className="text-white text-4xl font-bold mb-6">
              S·∫µn s√†ng tham gia DuckMen Quiz System?
            </Title>
            <Paragraph className="text-blue-100 text-xl mb-8 leading-relaxed">
              Tham gia c√πng h√†ng ngh√¨n ng∆∞·ªùi d√πng ƒë√£ tin t∆∞·ªüng DuckMen Quiz System ƒë·ªÉ n√¢ng cao hi·ªáu qu·∫£ h·ªçc t·∫≠p v√† ƒë√°nh gi√°
            </Paragraph>
            <Space size="large">
              <Button 
                type="primary" 
                size="large" 
                icon={<RocketOutlined />}
                className="bg-white text-blue-600 border-0 h-14 px-8 text-lg font-semibold hover:bg-gray-100"
                onClick={() => window.location.href = '/register'}
              >
                ƒêƒÉng k√Ω mi·ªÖn ph√≠
              </Button>
              <Button 
                size="large" 
                icon={<UserOutlined />}
                className="border-2 border-white text-white h-14 px-8 text-lg font-semibold hover:bg-white hover:text-blue-600"
                onClick={() => window.location.href = '/login'}
              >
                ƒêƒÉng nh·∫≠p
              </Button>
            </Space>
          </div>
        </div>
      </Content>

      {/* Footer */}
      <Footer className="bg-gray-900 text-white">
        <div className="max-w-7xl mx-auto px-8 py-12">
          <Row gutter={[48, 32]}>
            <Col xs={24} md={8}>
              <div className="space-y-4">
                <div className="flex items-center space-x-3">
                  <div className="w-10 h-10 bg-gradient-to-r from-blue-500 to-purple-600 rounded-lg flex items-center justify-center">
                    <span className="text-white text-xl">ü¶Ü</span>
                  </div>
                  <Title level={3} className="text-white m-0">DuckMen Quiz System</Title>
                </div>
                <Paragraph className="text-gray-400">
                  H·ªá th·ªëng quiz th√¥ng minh v√† hi·ªán ƒë·∫°i, gi√∫p b·∫°n t·∫°o v√† qu·∫£n l√Ω quiz chuy√™n nghi·ªáp v·ªõi tr·∫£i nghi·ªám tuy·ªát v·ªùi.
                </Paragraph>
                <div className="flex space-x-4">
                  <Button type="text" icon={<MailOutlined />} className="text-gray-400">
                    hello@duckmen.vn
                  </Button>
                  <Button type="text" icon={<PhoneOutlined />} className="text-gray-400">
                    +84 901 234 567
                  </Button>
                </div>
              </div>
            </Col>
            
            <Col xs={12} md={4}>
              <Title level={5} className="text-white">S·∫£n ph·∫©m</Title>
              <div className="space-y-3">
                <div><Button type="text" className="text-gray-400 p-0">T√≠nh nƒÉng</Button></div>
                <div><Button type="text" className="text-gray-400 p-0">B·∫£ng gi√°</Button></div>
                <div><Button type="text" className="text-gray-400 p-0">API</Button></div>
                <div><Button type="text" className="text-gray-400 p-0">T√≠ch h·ª£p</Button></div>
              </div>
            </Col>
            
            <Col xs={12} md={4}>
              <Title level={5} className="text-white">H·ªó tr·ª£</Title>
              <div className="space-y-3">
                <div><Button type="text" className="text-gray-400 p-0">Trung t√¢m tr·ª£ gi√∫p</Button></div>
                <div><Button type="text" className="text-gray-400 p-0">H∆∞·ªõng d·∫´n</Button></div>
                <div><Button type="text" className="text-gray-400 p-0">Video tutorial</Button></div>
                <div><Button type="text" className="text-gray-400 p-0">Li√™n h·ªá</Button></div>
              </div>
            </Col>
            
            <Col xs={24} md={8}>
              <Title level={5} className="text-white">Newsletter</Title>
              <Paragraph className="text-gray-400 mb-4">
                ƒêƒÉng k√Ω ƒë·ªÉ nh·∫≠n th√¥ng tin c·∫≠p nh·∫≠t m·ªõi nh·∫•t v·ªÅ s·∫£n ph·∫©m
              </Paragraph>
              <Space.Compact className="w-full">
                <Input placeholder="Email c·ªßa b·∫°n" className="flex-1" />
                <Button type="primary" className="bg-gradient-to-r from-blue-500 to-purple-600 border-0">
                  ƒêƒÉng k√Ω
                </Button>
              </Space.Compact>
            </Col>
          </Row>
          
          <Divider className="border-gray-700 my-8" />
          
          <div className="flex justify-between items-center">
            <Text className="text-gray-400">
              ¬© 2025 DuckMen Quiz System. All rights reserved.
            </Text>
            <Space>
              <Button type="text" className="text-gray-400">Ch√≠nh s√°ch b·∫£o m·∫≠t</Button>
              <Button type="text" className="text-gray-400">ƒêi·ªÅu kho·∫£n s·ª≠ d·ª•ng</Button>
            </Space>
          </div>
        </div>
      </Footer>

      {/* Demo Modal */}
      <Modal
        title="ü¶Ü Demo DuckMen Quiz System"
        open={showDemo}
        onCancel={() => setShowDemo(false)}
        footer={null}
        width={800}
        className="demo-modal"
      >
        <div className="space-y-6">
          <div className="text-center">
            <Title level={3}>Tr·∫£i nghi·ªám ngay t√≠nh nƒÉng n·ªïi b·∫≠t</Title>
            <Paragraph className="text-gray-600">
              Kh√°m ph√° giao di·ªán Admin v√† User trong m·ªôt demo t∆∞∆°ng t√°c
            </Paragraph>
          </div>
          
          <Row gutter={[24, 24]}>
            <Col span={12}>
              <Card className="text-center hover:shadow-lg transition-shadow cursor-pointer">
                <SettingOutlined className="text-4xl text-blue-500 mb-4" />
                <Title level={4}>Admin Demo</Title>
                <Paragraph>T·∫°o c√¢u h·ªèi, qu·∫£n l√Ω quiz v√† xem b√°o c√°o</Paragraph>
                <Button type="primary" icon={<ArrowRightOutlined />}>
                  Truy c·∫≠p Demo
                </Button>
              </Card>
            </Col>
            <Col span={12}>
              <Card className="text-center hover:shadow-lg transition-shadow cursor-pointer">
                <UserOutlined className="text-4xl text-green-500 mb-4" />
                <Title level={4}>User Demo</Title>
                <Paragraph>L√†m quiz v√† xem k·∫øt qu·∫£ chi ti·∫øt</Paragraph>
                <Button type="primary" icon={<ArrowRightOutlined />}>
                  Truy c·∫≠p Demo
                </Button>
              </Card>
            </Col>
          </Row>
        </div>
      </Modal>
    </Layout>
  );
};

export default Emty;