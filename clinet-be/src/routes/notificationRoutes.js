const express = require('express');
const router = express.Router();
const Notification = require('../models/Notification');
const auth = require('../middleware/authMiddleware').auth;

// üì• GET: l·∫•y t·∫•t c·∫£ th√¥ng b√°o c·ªßa user ‚Üí /api/notifications/:userId
router.get('/:userId', auth, async (req, res) => {
  try {
    const { userId } = req.params;
    if (req.user.id !== userId && req.user.role !== 'admin') {
      return res.status(403).json({ success: false, message: 'Kh√¥ng c√≥ quy·ªÅn truy c·∫≠p' });
    }

    const notifs = await Notification.find({ userId }).sort({ createdAt: -1 });

    res.json({ success: true, data: notifs });
  } catch (err) {
    console.error('‚ùå L·ªói get notifications:', err);
    res.status(500).json({ success: false, message: 'L·ªói server' });
  }
});

// ‚úÖ PUT: ƒë√°nh d·∫•u t·∫•t c·∫£ ƒë√£ ƒë·ªçc ‚Üí /api/notifications/:userId/mark-all-read
router.put('/:userId/mark-all-read', auth, async (req, res) => {
  try {
    const { userId } = req.params;
    if (req.user.id !== userId && req.user.role !== 'admin') {
      return res.status(403).json({ message: 'Kh√¥ng c√≥ quy·ªÅn' });
    }

    await Notification.updateMany({ userId, read: false }, { read: true });
    res.json({ success: true, message: 'ƒê√£ ƒë√°nh d·∫•u t·∫•t c·∫£ l√† ƒë√£ ƒë·ªçc' });
  } catch (err) {
    res.status(500).json({ success: false, message: 'L·ªói server' });
  }
});

// ‚úÖ PUT: ƒë√°nh d·∫•u 1 th√¥ng b√°o ƒë√£ ƒë·ªçc ‚Üí /api/notifications/:id/mark-read
router.put('/:id/mark-read', auth, async (req, res) => {
  try {
    const notif = await Notification.findById(req.params.id);
    if (!notif || (notif.userId.toString() !== req.user.id && req.user.role !== 'admin')) {
      return res.status(403).json({ message: 'Kh√¥ng c√≥ quy·ªÅn' });
    }

    notif.read = true;
    await notif.save();

    res.json({ success: true, message: 'ƒê√£ ƒë√°nh d·∫•u l√† ƒë√£ ƒë·ªçc' });
  } catch (err) {
    res.status(500).json({ success: false, message: 'L·ªói server' });
  }
});

// ‚ûï POST: t·∫°o th√¥ng b√°o m·ªõi ‚Üí /api/notifications
router.post('/', auth, async (req, res) => {
  try {
    const { userId, title, message, type, linkId } = req.body;

    const newNotif = await Notification.create({
      userId,
      title,
      message,
      type,
      linkId,
      read: false
    });

    res.status(201).json({ success: true, data: newNotif });
  } catch (err) {
    res.status(500).json({ success: false, message: 'Kh√¥ng th·ªÉ t·∫°o th√¥ng b√°o' });
  }
});

// üóë DELETE: xo√° th√¥ng b√°o ‚Üí /api/notifications/:id
router.delete('/:id', auth, async (req, res) => {
  try {
    const notif = await Notification.findById(req.params.id);
    if (!notif || (notif.userId.toString() !== req.user.id && req.user.role !== 'admin')) {
      return res.status(403).json({ message: 'Kh√¥ng c√≥ quy·ªÅn' });
    }

    await Notification.deleteOne({ _id: req.params.id });
    res.json({ success: true, message: 'ƒê√£ xo√° th√¥ng b√°o' });
  } catch (err) {
    res.status(500).json({ success: false, message: 'L·ªói server' });
  }
});

module.exports = router;
